version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    container_name: ai_knowledge_postgres
    environment:
      POSTGRES_DB: ai_knowledge
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init_db.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ai_knowledge"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: ai_knowledge_redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass ""
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  # Optional: Redis Commander для визуального управления Redis
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: ai_knowledge_redis_ui
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    profiles:
      - tools

  # Optional: pgAdmin для управления PostgreSQL
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: ai_knowledge_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    profiles:
      - tools

volumes:
  postgres_data:
    name: ai_knowledge_postgres_data
  redis_data:
    name: ai_knowledge_redis_data
  pgadmin_data:
    name: ai_knowledge_pgadmin_data

networks:
  default:
    name: ai_knowledge_network
